
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ,Режим)
	
	//// Проверяем остатки по старой методике
    Движения.АктивныеПосещения.Записывать = Истина;
    Движения.Записать();
    
    Запрос = Новый Запрос;
    Запрос.Текст = "ВЫБРАТЬ
    |	АктивныеПосещенияОстатки.КоличествоПосещенийОстаток,
    |	АктивныеПосещенияОстатки.ВидАттракциона
    |ИЗ
    |	РегистрНакопления.АктивныеПосещения.Остатки(, Основание = &Основание) КАК АктивныеПосещенияОстатки";
    
    Запрос.УстановитьПараметр("Основание", Основание);
    
    Выборка = Запрос.Выполнить().Выбрать();
    
    // лучше инициализировать эти переменные, чтобы лучше разбираться в коде
    ОсталосьПосещений = 0;
    ВидАттракционаАбонемента = Неопределено;
     
    Если Выборка.Следующий() Тогда 
    
    	ОсталосьПосещений = Выборка.КоличествоПосещенийОстаток;
    	ВидАттракционаАбонемента = Выборка.ВидАттракциона;
    
    КонецЕсли;
    
    Если ОсталосьПосещений < 1 Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "В билете не осталось посещений.";
		Сообщение.Поле = "Основание"; 	
		Сообщение.Сообщить();
	КонецЕсли;
    
    ВидАттракционаДокумента = ВидАттракциона(Аттракцион);
    Если ЗначениеЗаполнено(ВидАттракционаАбонемента) 
    	и ВидАттракционаДокумента<>ВидАттракционаАбонемента Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Билет не подходит для посещения этого аттракциона.";
		Сообщение.Поле = "Основание"; 	
		Сообщение.Сообщить();
	КонецЕсли;
    
    Если Отказ Тогда
    	Возврат;
    КонецЕсли;
    
    
    
	// регистр АктивныеПосещения
	Движения.АктивныеПосещения.Записывать = Истина;
	Движение = Движения.АктивныеПосещения.Добавить();
	Движение.Период = Дата;
	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	Движение.Основание = Основание;
	//Движение.ВидАттракциона = ВидАттракциона(Аттракцион);
	Движение.ВидАттракциона = ВидАттракционаАбонемента;
	Движение.КоличествоПосещений = 1;

    // Новая методика контроля остатков.
    // Ниже Проверяем остатки по новой методике
    //Движения.Записать();
   
   //+ 
//    Запрос = Новый Запрос;
//    Запрос.Текст = "ВЫБРАТЬ
//    |	АктивныеПосещенияОстатки.Основание
//    |ИЗ
//    |	РегистрНакопления.АктивныеПосещения.Остатки(, Основание = &Основание) КАК АктивныеПосещенияОстатки
//    |ГДЕ
//    |	АктивныеПосещенияОстатки.КоличествоПосещенийОстаток < 0";
//	
//	Запрос.УстановитьПараметр("Основание", Основание);
//	
//	Если Не Запрос.Выполнить().Пустой() Тогда
//		Отказ = Истина;
//		Сообщение = Новый СообщениеПользователю();
//		Сообщение.Текст = "Можно проходит только один раз.";
//		Сообщение.Поле = "Основание"; 	
//		Сообщение.Сообщить();
//	КонецЕсли; 
	//-
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВидАттракциона(Аттракцион)

	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Аттракционы.ВидАттракциона
	|ИЗ
	|	Справочник.Аттракционы КАК Аттракционы
	|ГДЕ
	|	Аттракционы.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Аттракцион);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
		
	Возврат Выборка.ВидАттракциона; 
	
КонецФункции

#КонецОбласти

#Область Инициализация

#КонецОбласти

#КонецЕсли
